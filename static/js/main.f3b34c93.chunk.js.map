{"version":3,"sources":["components/UserSearch.module.css","components/Layout.module.css","components/Notification.module.css","components/Loading.module.css","components/Layout.js","store/uiSlice.js","store/citySlice.js","store/actions.js","components/UserSearch.js","components/Weather.js","components/Notification.js","components/Loading.js","App.js","reportWebVitals.js","store/store.js","index.js","components/Weather.module.css"],"names":["module","exports","Layout","props","className","classes","main","children","uiSlice","createSlice","name","initialState","notification","loading","reducers","showNotification","state","action","message","payload","clearNotification","setLoading","uiActions","actions","citySlice","city","weather","addCity","addWeather","cityActions","key","actionsfetchDataHandler","userValue","dispatch","a","fetchDataHandler","fetch","response","ok","Error","json","data","cityKey","Key","fetchWeatherHandler","response2","data2","result1","UserSearch","useDispatch","inputRef","useRef","onSubmit","e","preventDefault","inputRefValue","current","value","trim","htmlFor","ref","type","id","Weather","useSelector","console","log","imgSrc","IsDayTime","icon","WeatherIcon","motion","div","initial","x","animate","weatherImage","src","alt","weatherDesc","LocalizedName","Country","WeatherText","Temperature","Metric","Value","Notification","y","Loading","class","App","ui","useEffect","timer","setTimeout","clearTimeout","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3b34c93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-form\":\"UserSearch_search-form__3qIa8\",\"form-group\":\"UserSearch_form-group__KfEPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1xgYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1WiPc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-roller\":\"Loading_lds-roller__26Yfy\"};","import {Fragment} from 'react'\r\nimport classes from './Layout.module.css'\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <main className={classes.main}>{props.children}</main>  \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst uiSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: {\r\n        notification: null,\r\n        loading: false\r\n    },\r\n    reducers: {\r\n        showNotification(state, action) {\r\n            state.notification = {\r\n                message: action.payload.message\r\n            }\r\n        },\r\n        clearNotification(state, action) {\r\n            state.notification = null\r\n        },\r\n        setLoading(state, action) {\r\n            state.loading = action.payload\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst citySlice = createSlice({\r\n    name: 'city',\r\n    initialState: {\r\n        city: null,\r\n        weather: null\r\n    },\r\n    reducers: {\r\n        addCity(state, action) {\r\n            state.city = action.payload \r\n        },\r\n        addWeather(state, action) {\r\n            state.weather = action.payload \r\n        },\r\n    }\r\n})\r\n\r\n\r\nexport const cityActions = citySlice.actions;\r\n\r\nexport default citySlice;","import {cityActions} from './citySlice'\r\nimport {uiActions} from './uiSlice'\r\n\r\nconst key = 'dGd4rEiqwfaUUsyWCj29QIVBXP6r7hAP'\r\n\r\nexport const actionsfetchDataHandler = (userValue) => {\r\n    return async (dispatch) => {\r\n        const fetchDataHandler = async () => {\r\n          const response = await fetch(`http://dataservice.accuweather.com/locations/v1/cities/search?apikey=${key}&q=${userValue}&language=ru`)\r\n          if (!response.ok) {\r\n            throw new Error({message: 'There is a server error'})\r\n          }\r\n          const data = await response.json()\r\n          dispatch(cityActions.addCity(data))\r\n          let cityKey = data[0].Key \r\n          return cityKey\r\n          }\r\n\r\n      const fetchWeatherHandler = async (cityKey) => {\r\n        const response2 = await fetch(`http://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${key}&language=ru`)\r\n        if (!response2.ok) {\r\n          throw new Error({message: 'There is a server error'})\r\n        }\r\n        const data2 = await response2.json() \r\n        dispatch(cityActions.addWeather(data2))\r\n        return data2\r\n      }\r\n\r\n\r\n      try {\r\n        dispatch(uiActions.setLoading(true))\r\n        const result1 = await fetchDataHandler()\r\n        await fetchWeatherHandler(result1)\r\n      } catch (error) {\r\n        dispatch(uiActions.showNotification({\r\n          message:'Проверьте правильность написания города'\r\n        }))  \r\n      }\r\n            dispatch(uiActions.setLoading(false))\r\n\r\n\r\n    // just another option below of using then/catch\r\n\r\n      // dispatch(uiActions.setLoading(true))\r\n      // fetchDataHandler()\r\n      // .then(data => fetchWeatherHandler(data))\r\n      // .catch(err => {\r\n      //   dispatch(uiActions.showNotification({\r\n      //     message:'не вводи фигню всякую!'\r\n      //   }))  \r\n      // })\r\n      // dispatch(uiActions.setLoading(false))\r\n  \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {useRef} from 'react'\r\nimport classes from './UserSearch.module.css'\r\nimport {uiActions} from '../store/uiSlice'\r\nimport {useDispatch} from 'react-redux'\r\nimport {actionsfetchDataHandler} from '../store/actions'\r\n\r\nconst UserSearch = (props) => {\r\n    const dispatch = useDispatch()\r\n    const inputRef = useRef()\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let inputRefValue = inputRef.current.value.trim();\r\n\r\n        if (inputRefValue === '') {\r\n            dispatch(uiActions.showNotification({\r\n                message: 'Город не введен. Введите пожалуйста.'\r\n            }))\r\n        } else {\r\n            dispatch(actionsfetchDataHandler(inputRefValue))\r\n            inputRef.current.value = ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className={classes[`search-form`]} onSubmit={onSubmitHandler}>\r\n            <div className={classes[`form-group`]}>\r\n                <label htmlFor=\"city\">Введите город</label><br />\r\n                <input ref={inputRef} type=\"text\" id=\"city\"/>\r\n            </div>\r\n            <button>Получить данные о погоде</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UserSearch\r\n","import { useSelector } from 'react-redux';\r\nimport {motion} from 'framer-motion'\r\nimport classes from './Weather.module.css'\r\n\r\n\r\nconst Weather = () => {\r\n\r\n   const weather = useSelector(state => state.city.weather)\r\n   const city = useSelector(state => state.city.city)\r\n    console.log(weather)\r\n\r\n    let imgSrc = weather[0].IsDayTime ? './images/day.svg' : './images/night.svg'\r\n    let icon = `./images/icons/${weather[0].WeatherIcon}.svg`\r\n\r\n    return (\r\n        <motion.div initial={{x:'-100vw'}} animate={{x:0}} className={classes.weather}>\r\n            <div className={classes.weatherImage}>\r\n                <img src={imgSrc} alt=\"day/night\" />\r\n            </div>\r\n            <div className={classes.icon}>\r\n                <img src={icon} alt=\"weather icon\" />\r\n            </div>\r\n            <div className={classes.weatherDesc}>\r\n                <span>{city[0].LocalizedName}, </span>\r\n                <span>{city[0].Country.LocalizedName}</span>\r\n                 <h3>{weather[0].WeatherText}</h3>\r\n                 <h3>{weather[0].Temperature.Metric.Value} градусов</h3>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import {motion} from 'framer-motion'\r\nimport classes from './Notification.module.css'\r\n\r\nconst Notification = (props) => {\r\n    return (\r\n        <motion.div initial={{y: '-100vh'}} animate={{y:0}} className={classes.notification}>\r\n            <div className=\"message\">{props.message}</div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import classes from './Loading.module.css'\r\n\r\nconst Loading = () => {\r\n    return (\r\n    <div class={classes[`lds-roller`]}>\r\n        <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Loading\r\n\r\n\r\n","import { useEffect } from 'react'\nimport Layout from './components/Layout';\nimport UserSearch from \"./components/UserSearch\";\nimport Weather from './components/Weather';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {actionsfetchDataHandler} from './store/actions'\nimport {uiActions} from './store/uiSlice'\nimport Notification from './components/Notification';\nimport Loading from './components/Loading';\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const weather = useSelector(state => state.city.weather)\n  const city = useSelector(state => state.city.city)\n  const notification = useSelector(state => state.ui.notification)\n  const loading = useSelector(state => state.ui.loading)\n\n  useEffect(() => {\n      dispatch(actionsfetchDataHandler('Санкт-Петербург'))\n  }, [dispatch])\n\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      dispatch(uiActions.clearNotification())\n    }, 3000)\n    return () => clearTimeout(timer)\n  }, [dispatch, notification])\n\n\n  return (\n      <Layout>\n        {loading && <Loading/>}\n        {!loading && notification && <Notification message={notification.message}/>}\n        {!loading && weather && city.length > 0 && <Weather/>}\n        <UserSearch/>\n      </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport uiSlice from './uiSlice'\r\nimport citySlice from './citySlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n      ui: uiSlice.reducer,\r\n        city: citySlice.reducer,\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"Weather_weather__2rd2M\",\"weatherImage\":\"Weather_weatherImage__1y_Rv\",\"icon\":\"Weather_icon__KUuQJ\",\"weatherDesc\":\"Weather_weatherDesc__3mqM7\"};"],"sourceRoot":""}