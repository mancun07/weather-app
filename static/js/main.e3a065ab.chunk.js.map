{"version":3,"sources":["components/UserSearch.module.css","components/Layout.module.css","components/Notification.module.css","components/Layout.js","store/uiSlice.js","store/citySlice.js","store/actions.js","components/UserSearch.js","components/Weather.js","components/Notification.js","App.js","reportWebVitals.js","store/store.js","index.js","components/Weather.module.css"],"names":["module","exports","Layout","props","className","classes","main","children","uiSlice","createSlice","name","initialState","notification","reducers","showNotification","state","action","message","payload","clearNotification","uiActions","actions","citySlice","city","weather","addCity","addWeather","cityActions","key","UserSearch","dispatch","useDispatch","inputRef","useRef","onSubmit","e","preventDefault","userValue","inputRefValue","current","value","trim","a","fetchDataHandler","fetch","response","ok","Error","json","data","cityKey","Key","console","log","fetchWeatherHandler","response2","data2","then","catch","err","htmlFor","ref","type","id","React","memo","Weather","useSelector","imgSrc","IsDayTime","icon","WeatherIcon","motion","div","initial","x","animate","weatherImage","src","alt","weatherDesc","LocalizedName","Country","WeatherText","Temperature","Metric","Value","Notification","y","App","ui","useEffect","timer","setTimeout","clearTimeout","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3a065ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-form\":\"UserSearch_search-form__3qIa8\",\"form-group\":\"UserSearch_form-group__KfEPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1xgYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1WiPc\"};","import React, {Fragment} from 'react'\r\nimport classes from './Layout.module.css'\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <main className={classes.main}>{props.children}</main>  \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst uiSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: {\r\n        notification: null\r\n    },\r\n    reducers: {\r\n        showNotification(state, action) {\r\n            state.notification = {\r\n                message: action.payload.message\r\n            }\r\n        },\r\n        clearNotification(state, action) {\r\n            state.notification = null\r\n        },\r\n    }\r\n})\r\n\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst citySlice = createSlice({\r\n    name: 'city',\r\n    initialState: {\r\n        city: null,\r\n        weather: null\r\n    },\r\n    reducers: {\r\n        addCity(state, action) {\r\n            state.city = action.payload \r\n        },\r\n        addWeather(state, action) {\r\n            state.weather = action.payload \r\n        },\r\n    }\r\n})\r\n\r\n\r\nexport const cityActions = citySlice.actions;\r\n\r\nexport default citySlice;","import {cityActions} from './citySlice'\r\nimport {uiActions} from './uiSlice'\r\n\r\nconst key = 'dGd4rEiqwfaUUsyWCj29QIVBXP6r7hAP'\r\n\r\nexport const actionsfetchDataHandler = (userValue) => {\r\n    return async (dispatch) => {\r\n        const fetchDataHandler = async () => {\r\n          const response = await fetch(`http://dataservice.accuweather.com/locations/v1/cities/search?apikey=${key}&q=${userValue}&language=ru`)\r\n          if (!response.ok) {\r\n            throw new Error({message: 'There is a server error'})\r\n          }\r\n          const data = await response.json()\r\n          dispatch(cityActions.addCity(data))\r\n          let cityKey = data[0].Key \r\n          console.log(data)\r\n          return cityKey\r\n          }\r\n\r\n      const fetchWeatherHandler = async (cityKey) => {\r\n        const response2 = await fetch(`http://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${key}&language=ru`)\r\n        if (!response2.ok) {\r\n          throw new Error({message: 'There is a server error'})\r\n        }\r\n        const data2 = await response2.json() \r\n        dispatch(cityActions.addWeather(data2))\r\n        console.log(data2)\r\n        return data2\r\n      }\r\n\r\n      fetchDataHandler()\r\n      .then(data => fetchWeatherHandler(data))\r\n      .catch(err => {\r\n        dispatch(uiActions.showNotification({\r\n          message:'Проверьте правильность написания города'\r\n        }))  \r\n      })\r\n\r\n      // just another option below of using async/await\r\n\r\n      // try {\r\n      //   const result1 = await fetchDataHandler()\r\n      //   const result2 = await fetchWeatherHandler(result1)\r\n      //   console.log(result2)\r\n      // } catch (error) {\r\n      //   dispatch(uiActions.showNotification({\r\n      //     message:'Проверьте правильность написания города'\r\n      //   }))  \r\n      // }\r\n  \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useRef} from 'react'\r\nimport classes from './UserSearch.module.css'\r\nimport {uiActions} from '../store/uiSlice'\r\nimport {useDispatch} from 'react-redux'\r\nimport {actionsfetchDataHandler} from '../store/actions'\r\n\r\nconst UserSearch = (props) => {\r\n    const dispatch = useDispatch()\r\n    const inputRef = useRef()\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let inputRefValue = inputRef.current.value.trim();\r\n\r\n        if (inputRefValue === '') {\r\n            dispatch(uiActions.showNotification({\r\n                message: 'Город не введен. Введите  пожалуйста.'\r\n            }))\r\n        } else {\r\n            dispatch(actionsfetchDataHandler(inputRefValue))\r\n            inputRef.current.value = ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className={classes[`search-form`]} onSubmit={onSubmitHandler}>\r\n            <div className={classes[`form-group`]}>\r\n                <label htmlFor=\"city\">Введите город</label><br />\r\n                <input ref={inputRef} type=\"text\" id=\"city\"/>\r\n            </div>\r\n            <button>Получить данные о погоде</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default React.memo(UserSearch)\r\n","import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport {motion} from 'framer-motion'\r\nimport classes from './Weather.module.css'\r\n\r\n\r\nconst Weather = () => {\r\n\r\n   const weather = useSelector(state => state.city.weather)\r\n   const city = useSelector(state => state.city.city)\r\n    console.log(weather)\r\n\r\n    let imgSrc = weather[0].IsDayTime ? './images/day.svg' : './images/night.svg'\r\n    let icon = `./images/icons/${weather[0].WeatherIcon}.svg`\r\n\r\n    return (\r\n        <motion.div initial={{x:'-100vw'}} animate={{x:0}} className={classes.weather}>\r\n            <div className={classes.weatherImage}>\r\n                <img src={imgSrc} alt=\"day/night\" />\r\n            </div>\r\n            <div className={classes.icon}>\r\n                <img src={icon} alt=\"weather icon\" />\r\n            </div>\r\n            <div className={classes.weatherDesc}>\r\n                <span>{city[0].LocalizedName}, </span>\r\n                <span>{city[0].Country.LocalizedName}</span>\r\n                 <h3>{weather[0].WeatherText}</h3>\r\n                 <h3>{weather[0].Temperature.Metric.Value} градусов</h3>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\r\nimport {motion} from 'framer-motion'\r\nimport classes from './Notification.module.css'\r\n\r\nconst Notification = (props) => {\r\n    return (\r\n        <motion.div initial={{y: '-100vh'}} animate={{y:0}} className={classes.notification}>\r\n            <div className=\"message\">{props.message}</div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import {useState, useCallback, useEffect} from 'react'\nimport Layout from './components/Layout';\nimport UserSearch from \"./components/UserSearch\";\nimport Weather from './components/Weather';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {actionsfetchDataHandler} from './store/actions'\nimport {uiActions} from './store/uiSlice'\nimport Notification from './components/Notification';\n\n// \"homepage\": \"https://mancun07.github.io/weather-app\",\nfunction App() {\n  // const [weather, setWeather] = useState()\n  const dispatch = useDispatch()\n  // const userValue = useSelector(state => state.city.userValue)\n  const weather = useSelector(state => state.city.weather)\n  const city = useSelector(state => state.city.city)\n  const notification = useSelector(state => state.ui.notification)\n\n  // useEffect(() => {\n  //     dispatch(actionsfetchDataHandler('Санкт-Петербург'))\n  // }, [dispatch])\n\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      dispatch(uiActions.clearNotification())\n    }, 3000)\n    return () => clearTimeout(timer)\n  }, [dispatch, notification])\n\n\n  return (\n      <div className=\"wrapper\">\n      <Layout>\n        {notification && <Notification message={notification.message}/>}\n        {weather && city.length > 0 && <Weather/>}\n        <UserSearch/>\n      </Layout>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport uiSlice from './uiSlice'\r\nimport citySlice from './citySlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n      ui: uiSlice.reducer,\r\n        city: citySlice.reducer,\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"Weather_weather__2rd2M\",\"weatherImage\":\"Weather_weatherImage__1y_Rv\",\"icon\":\"Weather_icon__KUuQJ\",\"weatherDesc\":\"Weather_weatherDesc__3mqM7\"};"],"sourceRoot":""}